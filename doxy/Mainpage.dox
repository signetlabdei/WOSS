/**
 * \mainpage World Ocean Simulation System (WOSS) Library
 *
 * @author Federico Guerra - federico@guerra-tlc.com
 *
 * @version 1.13.0
 *
 * This document provides a short techical description of the <i>World Ocean Simulation System</i> (WOSS) library 
 * and of its integration into <i>Multi InteRfAce Cross Layer Extension</i> (NS-Miracle).<p>
 * 
 *
 * \section Overview Library overview
 *  
 * The WOSS library aims to model a channel power delay or frequency attenuation profiles 
 * according to a more accurate representation of propagation phenomena as described by the laws 
 * of acoustical physics [3]. WOSS is a <b>multi-threaded</b> framework that permits the integration 
 * of any existing underwater channel simulator that expects environmental data as input 
 * and provides as output a channel realization represented using the channel profiles just mentioned. 
 *
 * <b>From version 1.3.5 the simplified acoustic model</b> based on empirical equations for the 
 * calculation of delay, attenuation and noise power <b>has been moved into NS-Miracle</b>.
 * These equations can be found in [1], [2]. 
 *
 * Currently WOSS integrates the Bellhop ray-tracing program [4], while the NS-Miracle integration library retains 
 * the previously mentioned formula for the noise power. 
 *
 * <b>From version 1.3.0 WOSS supports time evolution</b>, for a better representation of the channel variability.
 * Bellhop calculations are performed across the whole bandwidth with custom resolution, 
 * while noise calculations are performed at the geometric average of the highest and the lowest frequencies 
 * of the band being used, as pointed in [5]. To calculate the solution of the propagation equations 
 * between a transmitter and a receiver, Bellhop requires the knowledge of the Sound Speed Profile (SSP) 
 * (The <i>Sound Speed Profile</i> is the propagation speed of sound considered as a function of water depth. 
 * Different profiles lead to potentially very different propagation effects, including surface sound channels, 
 * deep sound channels, convergence zones, shadow zones, and so on, see [3]), the Bathymetric Profile (BP) 
 * and the type of Bottom Sediments (BS, required to model acoustic power losses due to bottom reflections). 
 * In this respect, WOSS offers a technology independent database API and a number of classes to manipulate SSP, 
 * BP and BS data. For the SSP, it employs a custom implementation of the World Ocean Database [7-11], 
 * a collection of SSPs calculated with the TEOS-10 [6] exact formula based on the depth, temperature and salinity data
 * measured during a number of experiments around the world; the measurements are divided
 * by location and day or season of the year when the measurement was performed (recall that sound propagation 
 * is affected by water temperature, which in turn undergoes seasonal changes, especially in the superficial layer).
 * The bathymetry data have been taken from the General Bathymetric Chart of the Oceans [12], a public database 
 * offering samples of the depth of the sea bottom with an angular spacing of 30 seconds of arc. 
 * Finally, the type of bottom sediments is provided by a geo-acoustic analysis of the 
 * National Geophysical Data Center's Deck41 data-base [13].
 *
 * Thanks to this automation the user only has to specify the location in the world and the time where 
 * the simulation should take place. This is done by setting the simulated date and the wanted latitude 
 * and longitude of every node involved. The simulator automatically handles the rest. 
 * In more detail, the simulator picks the location (i.e., latitude, longitude and depth) of the transmitter 
 * and the receiver and queries the database manager for samples of bottom sediments, measured SSPs 
 * (for simplicity, the SSP can also be assumed to be constant, on average, throughout the network area) 
 * and for bathymetry data along the path. Full customization of surficial sediment, bathymetry and SSP data 
 * is also possible if more accurate data is available. The power delay profile obtained with Bellhop can be used 
 * to model multiple receptions: in detail the user can choose to coherently combine the complex channel gains
 * with a custom resolution time window and obtain one or more complex channel taps.
 *
 * Figs. 1.1 and 1.2 show the coherent sum of all channel taps, obtained with WOSS for an  example scenario. 
 * Fig. 1.1, represents the attenuation incurred by an acoustic wave at 4 kHz transmitted in August, 
 * approximately 20 km offshore the harbor of the city of Taranto, Southern Italy, with the transmitter located at 
 * 40.32N, 17.12E, 300 m depth. Darker shades of gray represent stronger signal power. 
 * The figure shows that the signal reaches the top right corner surface, about 11 km from the transmitter, 
 * bearing sufficient power to allow correct reception. In contrast, Fig 1.2 shows the same scenario in March: 
 * in this case, the average temperature of the water is lower, changing the way the sound is refracted and reflected 
 * by the sea bottom. Here, any acoustic receiver deployed between 9 and 11 km from the transmitter 
 * may be unable to acquire the transmitted signal. Furthermore, a shadow zone of about 2 km appears in front of 
 * the transmitter, causing failure in a hypothetical short range communication scenario.
 *
 * \image html bellhop_August.gif "Fig. 1.1"
 * \image latex bellhop_August.eps "Bellhop in August" width=0.8\textwidth
 * 
 * \image html bellhop_March.gif "Fig. 1.2"
 * \image latex bellhop_March.eps "Bellhop in March" width=0.8\textwidth
 * 
 * \section TechOverview Technical Overview
 *
 * In this section, a short techical overview of the WOSS library and its <i>API</i>s is provided.
 *
 * \subsection Foundation The Foundation Classes
 * 
 * WOSS foundation is a complete set of classes for:
 * <ul>
 * <li> <i>geographical coordinates</i> [woss::Coord, woss::CoordZ]: measured in decimal degrees, this classes offers 
 *         methods for distance, bearing, and marsden square calculations and other mathematical formulas;
 * <li> <i>date time</i> [woss::Time]: date time arithmetics;
 * <li> <i>simulation time reference</i> [woss::TimeReference]: importing a simulation time reference from the 
 *         external network simulator;
 * <li> <i>random number generation</i> [woss::RandomGenerator]: importing a custom random generator from an
 *         external network simulator or library;
 * <li> <i>sound speed profile</i> [woss::SSP]: sound speed calculations and manipulations with equations 
 *         taken from the scientific literature;
 * <li> <i>surficial sediment</i> [woss::Sediment]: geoacoustic sediment parameter definitions 
 *         and manipulations;
 * <li> <i>channel power delay profile</i> [woss::TimeArr]: profile sampling, averaging etc.
 * <li> <i>pressure</i> [woss::Pressure]: arithmetic and conversion operators;
 * <li> <i>transducer</i> [woss::Transducer]: accurate power consumption calculations and beam pattern capabilities of 
 *      real transducers;
 * <li> <i>altimetry</i> [woss::Altimetry]: a base class that should be used for implementing and simulating different sea surface wave spectra.
 * <li> a definitions handler class for "plugging-in" at run-time any class that inherits from the ones described above 
        [woss::DefHandler]. 
 * <li> <i>test suite</i> [woss::WossTest]: a base class that should be used for writing tests of specific WOSS framework APIs. 
 * </ul>
 * 
 * \subsection DbAPI The Database APIs
 * 
 * The woss::WossDb API separates database technology implementation (SQL, NetCDF, textual…) 
 * from data behaviour implementation, permitting maximum code modularity and re-usability.
 * Data behaviour are defined with WossBathymetryDb, WossSedimentDb, WossSSPDb.
 * 
 * The woss::WossDbCreator API provides interface for creation and initializiation of WossDb objects,
 * providing the user a ready-made database instance.
 *
 * Custom defined bathymetry, SSP and sediment databases are accessed through 
 * the woss::WossDbManager API, to provide a further refinement of data (eg. averaging, arithmetics…).
 *
 * The woss::WossResPressDb and woss::WossResTimeArrDb classes provide the possibility
 * to store and retrieve channel simulation results in any user defined fashion.
 *
 * \subsection WossAPI The Channel Simulator APIs
 *
 * The woss::Woss API has the task of integrating a channel simulator. It gives interface for:
 * <ul>
 *    <li> setting up the enviroment from databases or from custom data;
 *    <li> configuring, running and reading results of any channel simulator;
 *    <li> averaging and giving output results over any number of runs and frequencies;
 *    <li> optionally reading channel simulator's results [woss::ResReader, woss::WossResReader].
 * </ul>
 *
 * The woss::WossCreator API provides interface for creation and initializiation of woss::Woss objects, 
 * relieving the user from this task.
 *
 * The woss::WossManager API has the logic to control and manipulate and create woss::Woss objects. 
 * It offers the abilities to:
 * <ul>
 *    <li> carefully create and utilize Woss objects to minimize CPU load;
 *    <li> plan a strategy for time-varying and/or multi-frequency channel simulations;
 *    <li> use on-the-fly custom bathymetry, sediment or SSP data for any tx-rx pair.
 * </ul>
 *
 * Finally the woss::WossController API has the task of inter-connecting all major APIs involved.
 *
 * \subsection blockdiag WOSS block diagram
 *
 * \image html woss_db_diagram.gif "WOSS block diagram"
 * \image latex woss_db_diagram.eps "WOSS block diagram" width=0.8\textwidth
 *
 *
 * \subsection capabilities Current capabilities
 *
 * The current version provides:
 * <ul>
 *    <li> interface implementation for the Bellhop ray tracing program [4], [woss::BellhopWoss, 
 *         woss::BellhopCreator];
 *    <li> interface implementation and custom NetCDF db of monthly averaged SSPs, 
 *         calculated with the TEOS-10 exact formula [6] based on the temperature, salinity and depth data taken 
 *         from the World Ocean Atlas database of 2001 [7], 2005 [8], 2009 [9], 2013 [10], 2018 [11] and 2023 [12] 
 *         [woss::SspWoa2005Db, woss::SspWoa2005DbCreator];
 *    <li> interface implementation for the GEBCO NetCDF bathymetry databases 
 *         (all versions: 1D, 2D, 2008, 2014, 2019, 2020, 2021, 2022) [12], [woss::BathyGebcoDb, woss::BathyGebcoDbCreator];
 *    <li> interface implementation and custom NetCDF data analysis taken from the DECK41 database, 
 *         for bottom sediments composition [13], [woss::SedimDeck41Db, woss::SedimDeck41DbCreator, woss::SedimDeck41CoordDb,
 *         woss::SedimDeck41MarsdenDb, woss::SedimDeck41MarsdenOneDb];
 *    <li> A <b>multi-threaded</b> version that allows the parallel execution of multiple channel simulators
 *         [woss::WossManagerResDbMT];
 *    <li> a database of real acoustic transducers made from publicly avalaible datasheets;
 *    <li> an implementation of the Bretschneider sea surface wave spectrum for altimetry simulations;
 *    <li> support for time evolution, to account for channel variability.
 *    <li> support for unit testing that are integrated with autotools.
 * </ul>
 * @see \ref database for further info on custom database, \ref transducer_page for further info on transducers, \ref altimetry for further info on altimetry models, \ref time_evo for further info on time evolution modeling.
 *
 *
 * \subsection ref References
 *
 * <ol>
 *    <li> R. Urick, <i>Principles of Underwater Sound</i>. McGraw-Hill, 1983.
 *    <li> M. Stojanovic, “On the relationship between capacity and distance in an underwater acoustic 
 *         communication channel,” <i>ACM Mobile Comput. and Commun. Review</i>, vol. 11, no. 4, pp. 34–43, 2007.
 *    <li> F. Jensen, W. Kuperman, M. Porter, and H. Schmidt, <i>Computational Ocean Acoustics</i>. Springer-Verlag, 2000.
 *    <li> Bellhop code, http://oalib.hlsresearch.com/Rays/index.html .
 *    <li> P. C. Etter, <i>Underwater acoustic modeling and simulation</i>. Spon Press, Taylor & Francis group, 2003.
 *    <li> TEOS-10 source code http://www.TEOS-10.org .
 *    <li> World Ocean Atlas 2001, https://www.nodc.noaa.gov/OC5/WOA01/pr_woa01.html .
 *    <li> World Ocean Atlas 2005, https://www.nodc.noaa.gov/OC5/WOA05/pr_woa05.html .
 *    <li> World Ocean Atlas 2009, https://www.nodc.noaa.gov/OC5/WOA09/pr_woa09.html .
 *    <li> World Ocean Atlas 2013, https://www.nodc.noaa.gov/OC5/woa13/ .
 *    <li> World Ocean Atlas 2018, https://www.nodc.noaa.gov/OC5/woa18/ .
 *    <li> World Ocean Atlas 2023, https://www.nodc.noaa.gov/OC5/woa23/ .
 *    <li> General bathymetric chart of the oceans, http://www.gebco.net .
 *    <li> National geophysical data center, seafloor surficial sediment descriptions,
 *         http://www.ngdc.noaa.gov/mgg/geology/deck41.html .
 * </ol> 
**/

 
/**
 * \page database Database Descriptions
 *
 *
 * \section gebco_db GEBCO bathymetric NetCDF Database
 *
 * Please refer to official GEBCO documentation for further info on this NetCDF file.
 * @see woss::BathyGebcoDb, woss::BathyGebcoDbCreator
 *
 *
 * \section ssp_db World Ocean Atlas 2005 and 2009 SSP Databases
 * 
 * These databases contain monthly, seasonal and annual average of sound speed profiles, calculated with the TEOS-10
 * exact formula, and based on the depth, temperature and salinity provided by the World Ocean Atlas.
 * The available resolution is 1° x 1°. Data are provided at <i>standard depths</i> [m] : <p>
 * <b>0, 10, 20, 30, 50, 75, 100, 125, 150, 200, 250, 300, 400, 500, 600, 700, 800,
 * 900, 1000, 1100, 1200, 1300, 1400, 1500, 1750, 2000, 2500, 3000,
 * 3500, 4000, 4500, 5000, 5500</b>.<p>
 * The NetCDF files have been generated with NetCDF classic and are compatible with NetCDF4 library.
 * Each NetCDF file has the following dimensions:
 * <ul>
 *    <li> <i>latitude</i>: 180 values, from 89.5° to -89.5°
 *    <li> <i>longitude</i>: 360 values, from -179.5° to 179.5° 
 *    <li> <i>depth</i>: 33 values (standard depths).
 * </ul>
 * Each NetCDF file has the following variables description:
 * <ul>
 *    <li> <i>float ssp(latitude, longitude, depth)</i> ; \n
 *                ssp:units = "m/s" ;
 *    <li> <i>float latitude(latitude)</i> ; \n
 *                latitude:units = "decimal degrees" ;
 *    <li> <i>float longitude(longitude)</i> ; \n
 *                longitude:units = "decimal degrees" ;
 *    <li> <i>short depth(depth)</i> ; \n
 *                depth:units = "m" ;
 * </ul>
 * @see woss::SSP, woss::SspWoa2005Db, woss::SspWoa2005DbCreator
 *
 *
 * \section ssp_db_2013 World Ocean Atlas 2001, 2013, 2018 and 2023 SSP Databases
 * 
 * These databases contain monthly, seasonal and annual average of sound speed profiles, calculated with the TEOS-10
 * exact formula, and based on the depth, temperature and salinity provided by the World Ocean Atlas.
 * The available resolution is 0.25° x 0.25°. Data are provided at <i>standard depths</i> [m] : <p>
 * <b>0, 10, 20, 30, 50, 75, 100, 125, 150, 200, 250, 300, 400, 500, 600, 700, 800,
 * 900, 1000, 1100, 1200, 1300, 1400, 1500, 1750, 2000, 2500, 3000,
 * 3500, 4000, 4500, 5000, 5500</b>.<p>
 * The databases require NetCDF4 + HDF5 support.
 * Each NetCDF4 file has the following dimensions: 
 * <ul>
 *    <li> <i>latitude</i>: 720 values, from -89.875° to 89.875°
 *    <li> <i>longitude</i>: 1440 values, from -179.875° to 179.875° 
 *    <li> <i>depth</i>: 33 values (standard depths).
 * </ul>
 * Each NetCDF4 file has the following variables description:
 * <ul>
 *    <li> <i>float ssp(latitude, longitude, depth)</i> ; \n
 *                ssp:units = "m/s" ;
 *    <li> <i>float latitude(latitude)</i> ; \n
 *                latitude:units = "decimal degrees" ;
 *    <li> <i>float longitude(longitude)</i> ; \n
 *                longitude:units = "decimal degrees" ;
 *    <li> <i>short depth(depth)</i> ; \n
 *                depth:units = "m" ;
 * </ul>
 * @see woss::SSP, woss::SspWoa2005Db, woss::SspWoa2005DbCreator
 *
 *
 * \section sediment_db DECK41 Sediment NetCDF Database
 *
 * The DECK41 collection contains surficial sediment descriptions for over 36,000 seafloor samples worldwide.
 * Data include collecting source, ship, cruise, sample id, latitude/longitude, date of collection, water depth, 
 * sampling device, dominant lithology, secondary lithology, and a brief description of the surficial sediment 
 * at the location<p>
 * The NetCDF files provided indexes the dominant and secondary lithology for geoacoustical purposes. These values
 * are represented by an unsigned integer number between 0 and 11:
  * <ol start="0">
 *    <li> Coarser than sand
 *    <li> Sand
 *    <li> Silt
 *    <li> Clay
 *    <li> Ooze
 *    <li> Mud
 *    <li> Rocks, Rocks fragment
 *    <li> Organic material (shell, peat, wood, coral, etc.)
 *    <li> Nodules, slab or concretions (manganese, phosphate, iron, glauconite)
 *    <li> Hard bottom 
 *    <li value = "11"> NO_VALUE
 * </ol>
 * These values are collected in three different databases, and they come in different database format versions.
 * @see woss::Sediment, woss::SedimDeck41Db, woss::SedimDeck41DbCreator
 *
 *
 * \subsection sed_coord_db DECK41 NetCDF database
 *
 * This database contains all the valid DECK41 coordinates, quantized as per data formats below.
 * @see woss::SedimDeck41CoordDb
 *
 * \subsubsection sed_coord_db_V1_data_format V1 Data Format
 *
 * This database has a NetCDF legacy format, with resolution of 0.016° x 0.016°, with the following dimension:
 * <ul>
 *    <li> a single index dimension covering:
*     <li> <i>latitude</i>: 10801 values, from 90.0° to -90.0°
 *    <li> <i>longitude</i>: 21601 values, from -180° to 180.0° 
 *    <li> <i>spacing</i>: 0.0166666666666667°
 *    <li> <i>total indexes</i> (xysize) 233312401
 * </ul>
 * This NetCDF file has the following variables description:
 * <ul>
 *    <li> <i>byte seafloor_main_type(xysize)</i> ; \n
 *         seafloor_main_type:units = "DECK 41 type" ; \n
 *         seafloor_main_type:valid_min = 0 ; \n
 *         seafloor_main_type:valid_max = 9 ; \n
 *    <li> <i>byte seafloor_secondary_type(xysize)</i> ; \n
 *         seafloor_secondary_type:units = "DECK 41 type" ; \n
 *         seafloor_secondary_type:valid_min = 0 ; \n
 *         seafloor_secondary_type:valid_max = 9 ; 
 * </ul>
 *
 * \subsubsection sed_coord_db_V2_data_format V2 Data Format
 *
 * This database has a NetCDF4 format, with resolution of 0.016° x 0.016°, with the following dimensions:
 * <ul>
 *    <li> <i>latitude</i>: 10800 values, from -89.9833333333333333° to 89.9833333333333333°
 *    <li> <i>longitude</i>: 21600 values, from -179.9833333333333333° to 179.9833333333333333°
 * </ul>
 * The <i>spacing</i> is 0.0166666666666667°
 * This NetCDF file has the following variables description:
 * <ul>
 *    <li> <i>byte seafloor_main_type(latitude, longitude)</i> ; \n
 *         seafloor_main_type:units = "DECK 41 type" ; \n
 *         seafloor_main_type:valid_min = 0 ; \n
 *         seafloor_main_type:valid_max = 9 ; \n
 *    <li> <i>byte seafloor_secondary_type(latitude, longitude)</i> ; \n
 *         seafloor_secondary_type:units = "DECK 41 type" ; \n
 *         seafloor_secondary_type:valid_min = 0 ; \n
 *         seafloor_secondary_type:valid_max = 9 ; 
 * </ul>
 *
 * \subsection sed_marsden_db DECK41 marsden square NetCDF database
 * 
 * \image html msq10d.gif "Marsden square map"
 * \image latex msq10d.eps "Marsden square map" width=0.95\textwidth
 *
 * This database covers all marsden squares. Lithology data of a marsden square are 
 * a representative set of all original data for that particular square.
 * @see woss::SedimDeck41MarsdenDb
 *
 * \subsubsection sed_marsden_db_V1_data_format V1 Data Format
 * 
 * The database is in NetCDF legacy format. It has a single dimension:
 * <ul>
 *    <li> <i>marsden_square</i>: 937 values
 * </ul>
 * This NetCDF file has the following variables description:
 * <ul>
 *    <li> <i>byte seafloor_main_type(marsden_square)</i> ; \n
 *         seafloor_main_type:units = "DECK 41 type" ; \n
 *         seafloor_main_type:valid_min = 0 ; \n
 *         seafloor_main_type:valid_max = 9 ; \n
 *    <li> <i>byte seafloor_secondary_type(marsden_square)</i> ; \n
 *         seafloor_secondary_type:units = "DECK 41 type" ; \n
 *         seafloor_secondary_type:valid_min = 0 ; \n
 *         seafloor_secondary_type:valid_max = 9 ; 
 * </ul>
 *
 * \subsubsection sed_marsden_db_V2_data_format V2 Data Format
 * 
 * The database is in NetCDF4 format. It has a single dimension:
 * <ul>
 *    <li> <i>marsden_square</i>: 936 values
 * </ul>
 * This NetCDF file has the following variables description:
 * <ul>
 *    <li> <i>byte seafloor_main_type(marsden_square)</i> ; \n
 *         seafloor_main_type:units = "DECK 41 type" ; \n
 *         seafloor_main_type:valid_min = 0 ; \n
 *         seafloor_main_type:valid_max = 9 ; \n
 *    <li> <i>byte seafloor_secondary_type(marsden_square)</i> ; \n
 *         seafloor_secondary_type:units = "DECK 41 type" ; \n
 *         seafloor_secondary_type:valid_min = 0 ; \n
 *         seafloor_secondary_type:valid_max = 9 ; 
 * </ul>
 *
 * \subsection sed_marsden_one_db DECK41 marsden coordinates NetCDF database
 * 
 * \image html msqsub.gif "Marsden one degree squares"
 * \image latex msqsub.eps "Marsden one degree squares" width=0.5\textwidth
 *
 * This database covers all marsden coordinates squares (marsden square, marsden one degree square). 
 * Lithology data of a marsden coordinates square are a representative set of all original data 
 * for that particular set of marsden coordinates.
 * @see woss::SedimDeck41MarsdenOneDb
 *
 * \subsubsection sed_marsden_one_db_V1_data_format V1 Data Format
 * 
 * The database is in NetCDF legacy data format. It has two dimensions:
 * <ul>
 *    <li> <i>marsden_square</i>: 937 values
 *    <li> <i>marsden_one_degree</i>: 100 values
 * </ul>
 * The database has the following variables description:
 * <ul>
 *    <li> <i>byte seafloor_main_type(marsden_square, marsden_one_degree)</i> ; \n
 *         seafloor_main_type:units = "DECK 41 type" ; \n
 *         seafloor_main_type:valid_min = 0 ; \n
 *         seafloor_main_type:valid_max = 9 ; \n
 *    <li> <i>byte seafloor_secondary_type(marsden_square, marsden_one_degree)</i> ; \n
 *         seafloor_secondary_type:units = "DECK 41 type" ; \n
 *         seafloor_secondary_type:valid_min = 0 ; \n
 *         seafloor_secondary_type:valid_max = 9 ; 
 * </ul>
 *
 * \subsubsection sed_marsden_one_db_V2_data_format V2 Data Format
 * 
 * The database is in NetCDF4 data format. It has two dimensions:
 * <ul>
 *    <li> <i>marsden_square</i>: 936 values
 *    <li> <i>marsden_one_degree</i>: 100 values
 * </ul>
 * The database has the following variables description:
 * <ul>
 *    <li> <i>byte seafloor_main_type(marsden_square, marsden_one_degree)</i> ; \n
 *         seafloor_main_type:units = "DECK 41 type" ; \n
 *         seafloor_main_type:valid_min = 0 ; \n
 *         seafloor_main_type:valid_max = 9 ; \n
 *    <li> <i>byte seafloor_secondary_type(marsden_square, marsden_one_degree)</i> ; \n
 *         seafloor_secondary_type:units = "DECK 41 type" ; \n
 *         seafloor_secondary_type:valid_min = 0 ; \n
 *         seafloor_secondary_type:valid_max = 9 ; 
 * </ul>
 *
 * \subsection deck41_logic DECK41 Sediment selection logic
 *
 * woss::SedimDeck41Db uses all three NetCDF database for its Sediment query process:
 * <ol>
 *    <li> it first queries the woss::SedimDeck41CoordDb first with provided coordinates; 
 *    <li> if a suitable result is not found, then it continues the search in woss::SedimDeck41MarsdenOneDb, e.g. in 
 *         the corrispondant marsden one degree square associated with given coordinates;
 *    <li> if even this step fails, it finally searches woss::SedimDeck41MarsdenDb for the marsden square associated.
 * </ol>
 * @see woss::SedimDeck41Db, woss::Deck41TypeTests
 *
 *
 * \subsection deck41_geoacoustic DECK41 geoacoustic parameters
 *
 * A thorough analysis has been done and is still in process to correctly provide geoacoustical parameters for 
 * DECK41 lithology data. The available categories are: 
 * <ul>
 *    <li> Coarser than sand - woss::SedimentGravel
 *    <li> Sand - woss::SedimentSand
 *    <li> Silt - woss::SedimentSilt
 *    <li> Clay - woss::SedimentClay
 *    <li> Ooze - woss::SedimentOoze
 *    <li> Mud - woss::SedimentMud
 *    <li> Rocks, Rocks fragment - woss::SedimentRocks
 *    <li> Organic material (shell, peat, wood, coral, etc.) - woss::SedimentOrganic
 *    <li> Nodules, slab or concretions (manganese, phosphate, iron, glauconite) - woss::SedimentNodules
 *    <li> Hard bottom - woss::SedimentHardBottom
 * </ul>
 * @see woss::Sediment 
 *
 * This is a short list of references for the geoacoustical parameter analysis:
 * <ul>
 *    <li> L. D. Hampton, “Acoustic Properties of Sediments,” <i>J. Acoust. Soc. Am.</i>, vol. 42, 
 *         pp. 882-890, year 1967. 
 *    <li> E. L. Hamilton, “Sound velocity-density relations in sea-floor sediments and rocks,” 
 *         <i>J. Acoust. Soc. Am.</i>, vol. 63, no. 2, pp. 366-377, year 1978. 
 *    <li> E. L. Hamilton, “Geoacoustic modeling of the sea floor,” 
 *         <i>J. Acoust. Soc. Am.</i>, vol. 68, no. 5, pp. 1313-1340, year 1980. 
 *    <li>  P. Milholland, M. H. Manghnani, S. O. Schlanger and G. H. Sutton, 
 *         “Geoacoustic modeling of deep-sea carbonate sediments,” <i>J. Acoust. Soc. Am.</i>, 
 *         vol. 68, no. 5, pp. 1351-1360, year 1980.
 *    <li> F. A. Bowles, “A Geoacoustic Model for Fine-Grained, Unconsolidated Calcareous 
 *         Sediments (ARSRP Natural Laboratory),” <i>Naval Research Lab Stennis Space Center MS</i>, 
 *         pp. 58, year 1994. 
 *    <li> F. A. Bowles, “Observations on attenuation and shear-wave velocity in fine-grained, marine sediments,” 
 *         <i>J. Acoust. Soc. Am.</i>, vol. 101, no. 6, pp. 3385-3397, year 1997.
 *    <li> M. Siderius and  J.-P. Hermand, “Yellow Shark Spring 1995: Inversion results from sparse broadband 
           acoustic measurements over a highly range-dependent soft clay layer,” 
           <i>J. Acoust. Soc. Am.</i>, vol. 106, no. 2, pp. 637-651, year 1999.
 * </ul>
 *
 **/

/**
 * \page transducer_page Underwater Acoustic Transducers
 * 
 * \section DISCLAIMER
 * <b>Federico Guerra and SIGNET lab do not endorse or recommend
 *    the use of any of the transducer listed below. \n The copyright and
 *    property of of each transducer design is retained by the respective
 *    owners. The specifications of each transducer have been inferred from
 *    the transducer data sheets courtesy of the respective owners. \n The list
 *    below is to be taken as a best-effort list, meaning that data has been
 *    taken from publicly avalaible documents, at the programmer's
 *    discretion. \n This list is NOT final and will undergo continuous
 *    changes, aimed at providing support for an increasing number of
 *    transducers in WOSS. \n If you would like any specific, not currently
 *    supported transducer to be included in WOSS, please feel free to
 *    contribute by sending transducer data (in the format mentioned below)
 *    to nsmiracle-users@dei.unipd.it.</b>
 *
 *
 * \n WOSS accurately simulates power consumption, Sound Pressure Level (SPL) output,
 * and vertical beam pattern of real acoustic transducers. 
 * 
 * Transducers can be imported into simulation, and their beam pattern can be rotated or modified with a 
 * additive and a multiplicative constant to better suit the user needs.
 *
 * Furthermore, woss::Location, WossPosition and WossWpPosition support simulation of dynamic orientation 
 * of the associated transducer to better simulate how AUV movements impact on transmission.
 * @see woss::Location, WossPosition, WossWpPosition
 *
 * Finally UwMPhyBpskTransducer and WossMPhyBpsk now supports array of transducers to permit spectral 
 * optimizations with realistic power computations and ray attenuation.
 * @see new sample with waypoints 
 *
 * \section trans-format Transducer file format (ASCII and binary)
 *
 * The format of transducer .txt or .dat file can be changed by the user (extending the woss::Transducer class)
 * and is the followings (<b><tt>format</tt></b> in bold, comments are inline and in <i>italics</i>): <p>
 * <tt><b> BT-25UF </b></tt> <i>transducer's type name</i> \n
 * <tt><b> 25000.0 10000.0  </b></tt> <i>resonance frequency, -3dB bandwith around the resonance frequency</i> \n
 * <tt><b> 338 0.1  </b></tt> <i>max input power [W], duty cycle in (0,1]</i>  \n
 * <tt><b> 1.0 1.0 1.0 1.0  </b></tt> <i>TVR precision [hz], OCV precision [hz], conductance precision [hz], beam pattern precision [dec degrees]</i>  \n
 * <tt><b> 5  </b></tt> <i>total number of TVR values</i>  \n
 * <tt><b> 10000.0   120  </b></tt> <i>frequency [hz], TVR [dB re uPa/V @ 1m]</i>  \n
 * <tt><b> 23000.0   140  </b></tt> <i>...</i>  \n
 * <tt><b> 25000.0   140  </b></tt>  \n
 * <tt><b> 38000.0   136  </b></tt>  \n
 * <tt><b> 50000.0   135  </b></tt>  \n
 * <tt><b> 4  </b></tt> <i>total number of OCV values</i>  \n
 * <tt><b> 10000.0   -197  </b></tt> <i>frequency [hz], OCV [dB re V/uPa]</i>  \n
 * <tt><b> 20000.0   -190  </b></tt> <i>...</i>  \n
 * <tt><b> 23000.0   -190  </b></tt>   \n
 * <tt><b> 50000.0   -212  </b></tt>  \n
 * <tt><b> 6  </b></tt> <i>total number of conductance values</i>   \n
 * <tt><b> 10000.0   10  </b></tt> <i>frequency [hz], conductance [uS]</i>  \n
 * <tt><b> 13000.0   180  </b></tt> <i>... </i> \n
 * <tt><b> 23000.0   940  </b></tt>  \n
 * <tt><b> 30000.0   410  </b></tt> \n
 * <tt><b> 40000.0   390  </b></tt>  \n
 * <tt><b> 50000.0   590  </b></tt>  \n
 * <tt><b> 14  </b></tt> <i>total number of angles in the vertical/horiz beam pattern </i>  \n
 * <tt><b> -180  0  </b></tt> <i>angle between [-180, 180] in decimal degrees, [dB]</i>  \n
 * <tt><b> -150 -1  </b></tt> <i>if the transducer has conical or != toroidal symmetry </i> \n
 * <tt><b> -120 -5  </b></tt> <i> the rotation axis has to lie on angle = 0 axis </i>\n
 * <tt><b> -105 -14  </b></tt>  \n
 * <tt><b> -75 -14  </b></tt>  \n
 * <tt><b> -60 -5  </b></tt>  \n
 * <tt><b> -30 -1  </b></tt>  \n
 * <tt><b>   0  0  </b></tt>  \n
 * <tt><b>  30 -2  </b></tt>  \n
 * <tt><b>  60 -4  </b></tt>   \n
 * <tt><b>  90 -5  </b></tt>  \n
 * <tt><b> 120 -4  </b></tt>  \n
 * <tt><b> 150 -2  </b></tt>  \n
 * <tt><b> 180  0  </b></tt>  \n
 * 
 *
 * \section TC-List Transducer's list
 *
 * These are the currently available transducers in WOSS (in alphabetical order).
 *
 * \section BTech BTech Acoustics, LLC
 *
 * \subsection BT-1RCL BT-1RCL @ 28 kHz
 *
 * \subsubsection BT-1RCL-DT Datasheet:
 *
 * <a href="http://acomms.whoi.edu/documents/211001-SPC%20WH-BT-1%20Datasheet.pdf">Datasheet</a> 
 *
 * \subsubsection BT-1RCL-SPL SPL:
 *
 * \image html bezier_BT_1RCL.png "BTech BT-1RCL SPL" \n
 * \image latex bezier_BT_1RCL.eps "BTech BT-1RCL SPL" width=0.8\textwidth
 *
 * \subsubsection BT-1RCL-BP Vertical beam pattern:
 *
 * \image html BTech_BT_1RCL_20kHz.png "BTech BT-1RCL @ 20 kHz" \n
 * \image latex BTech_BT_1RCL_20kHz.eps "BTech BT-1RCL @ 20 kHz" width=0.8\textwidth
 * \image html BTech_BT_1RCL_25kHz.png "BTech BT-1RCL @ 25 kHz" \n
 * \image latex BTech_BT_1RCL_25kHz.eps "BTech BT-1RCL @ 25 kHz" width=0.8\textwidth
 * \image html BTech_BT_1RCL_30kHz.png "BTech BT-1RCL @ 30 kHz" \n
 * \image latex BTech_BT_1RCL_30kHz.eps "BTech BT-1RCL @ 30 kHz" width=0.8\textwidth
 *
 *
 * \subsection BT-2RCL BT-2RCL @ 28 kHz
 *
 * \subsubsection BT-2RCL-DT Datasheet:
 *
 * <a href="http://acomms.whoi.edu/documents/211001-SPC%20WH-BT-1%20Datasheet.pdf">Datasheet</a> 
 *
 * \subsubsection BT-2RCL-SPL SPL:
 *
 * \image html bezier_BT_2RCL.png "BTech BT-2RCL SPL" \n
 * \image latex bezier_BT_2RCL.eps "BTech BT-2RCL SPL" width=0.8\textwidth
 *
 * \subsubsection BT-2RCL-BP Vertical beam pattern:
 *
 * \image html BTech_BT_2RCL_20kHz.png "BTech BT-2RCL @ 20 kHz" \n
 * \image latex BTech_BT_2RCL_20kHz.eps "BTech BT-2RCL @ 20 kHz" width=0.8\textwidth
 * \image html BTech_BT_2RCL_25kHz.png "BTech BT-2RCL @ 25 kHz" \n
 * \image latex BTech_BT_2RCL_25kHz.eps "BTech BT-2RCL @ 25 kHz" width=0.8\textwidth
 * \image html BTech_BT_2RCL_30kHz.png "BTech BT-2RCL @ 30 kHz" \n
 * \image latex BTech_BT_2RCL_30kHz.eps "BTech BT-2RCL @ 30 kHz" width=0.8\textwidth
 *
 *
 * \subsection BT-25UF BT-25UF @ 25 kHz
 *
 * \subsubsection BT-25UF-DT Datasheet:
 *
 * <a href="http://acomms.whoi.edu/documents/211006-SPC%20BT25-UF%2025kHz%20Feed%20Through%20Transducer.pdf">Datasheet</a> 
 *
 * \subsubsection BT-25UF-SPL SPL:
 *
 * \image html bezier_BT_25UF.png "BTech BT-25UF SPL" \n
 * \image latex bezier_BT_25UF.eps "BTech BT-25UF SPL" width=0.8\textwidth
 *
 * \image html BTech_BT_25UF_20kHz.png "BTech BT-25UF @ 20 kHz" \n
 * \image latex BTech_BT_25UF_20kHz.eps "BTech BT-25UF @ 20 kHz" width=0.8\textwidth
 * \image html BTech_BT_25UF_25kHz.png "BTech BT-25UF @ 25 kHz" \n
 * \image latex BTech_BT_25UF_25kHz.eps "BTech BT-25UF @ 25 kHz" width=0.8\textwidth
 * \image html BTech_BT_25UF_30kHz.png "BTech BT-25UF @ 30 kHz" \n
 * \image latex BTech_BT_25UF_30kHz.eps "BTech BT-25UF @ 30 kHz" width=0.8\textwidth
 *
 *
 * \section ITC ITC 
 * 
 * \subsection ITC-2003 ITC-2003 @ 5,9.5 kHz
 *
 * \subsubsection ITC-2003-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/2003.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-2003-SPL SPL:
 *
 * \image html bezier_ITC_2003.png "ITC ITC-2003 SPL" \n
 * \image latex bezier_ITC_2003.eps "ITC ITC-2003 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-2003-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_2003_5kHz.png "ITC ITC-2003 @ 5 kHz" \n
 * \image latex ITC_ITC_2003_5kHz.eps "ITC ITC-2003 @ 5 kHz" width=0.8\textwidth
 *
 * \subsection ITC-2010 ITC-2010 @ 1,2.5 kHz
 *
 * \subsubsection ITC-2010-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/2010.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-2010-SPL SPL:
 *
 * \image html bezier_ITC_2010.png "ITC ITC-2010 SPL" \n
 * \image latex bezier_ITC_2010.eps "ITC ITC-2010 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-2010-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_2010_2kHz.png "ITC ITC-2010 @ 2 kHz" \n
 * \image latex ITC_ITC_2010_2kHz.eps "ITC ITC-2010 @ 2 kHz" width=0.8\textwidth
 *
 * \subsection ITC-2015 ITC-2015 @ 1.8,2.8 kHz
 *
 * \subsubsection ITC-2015-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/2015.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-2015-SPL SPL:
 *
 * \image html bezier_ITC_2015.png "ITC ITC-2015 SPL" \n
 * \image latex bezier_ITC_2015.eps "ITC ITC-2015 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-2015-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_2015_2kHz.png "ITC ITC-2015 @ 2 kHz" \n
 * \image latex ITC_ITC_2015_2kHz.eps "ITC ITC-2015 @ 2 kHz" width=0.8\textwidth
 *
 * \subsection ITC-2044 ITC-2044 @ 8,14 kHz
 *
 * \subsubsection ITC-2044-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/2044.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-2044-SPL SPL:
 *
 * \image html bezier_ITC_2044.png "ITC ITC-2044 SPL" \n
 * \image latex bezier_ITC_2044.eps "ITC ITC-2044 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-2044-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_2044_10kHz.png "ITC ITC-2044 @ 10 kHz" \n
 * \image latex ITC_ITC_2044_10kHz.eps "ITC ITC-2044 @ 10 kHz" width=0.8\textwidth
 *
 * \subsection ITC-2062 ITC-2062 @ .44,1.4 kHz
 *
 * \subsubsection ITC-2062-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/2062.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-2062-SPL SPL:
 *
 * \image html bezier_ITC_2062.png "ITC ITC-2062 SPL" \n
 * \image latex bezier_ITC_2062.eps "ITC ITC-2062 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-2062-BP Vertical beam pattern:
 *
 * \image html  ITC_ITC_2062_0.44kHz.png "ITC ITC-2062 @ 0.44 kHz" \n
 * \image latex ITC_ITC_2062_440Hz.eps "ITC ITC-2062 @ 0.44 kHz" width=0.8\textwidth
 * 
 * \subsection ITC-3001 ITC-3001 @ 17.5 kHz
 *
 * \subsubsection ITC-3001-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/3001.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-3001-SPL SPL:
 *
 * \image html bezier_ITC_3001.png "ITC ITC-3001 SPL" \n
 * \image latex bezier_ITC_3001.eps "ITC ITC-3001 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-3001-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_3001_17.5kHz.png "ITC ITC-3001 @ 17.5 kHz" \n
 * \image latex ITC_ITC_3001_17500Hz.eps "ITC ITC-3001 @ 17.5 kHz" width=0.8\textwidth
 *
 * \subsection ITC-3013 ITC-3013 @ 12.5 kHz
 *
 * \subsubsection ITC-3013-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/3013.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-3013-SPL SPL:
 *
 * \image html bezier_ITC_3013.png "ITC ITC-3013 SPL" \n
 * \image latex bezier_ITC_3013.eps "ITC ITC-3013 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-3013-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_3013_10kHz.png "ITC ITC-3013 @ 10 kHz" \n
 * \image latex ITC_ITC_3013_10kHz.eps "ITC ITC-3013 @ 10 kHz" width=0.8\textwidth
 *
 * \subsection ITC-3148 ITC-3148 @ 12.5 kHz
 *
 * \subsubsection ITC-3148-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/3148.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-3148-SPL SPL:
 *
 * \image html bezier_ITC_3148.png "ITC ITC-3148 SPL" \n
 * \image latex bezier_ITC_3148.eps "ITC ITC-3148 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-3148-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_3148_8kHz.png "ITC ITC-3148 @ 8 kHz" \n
 * \image latex ITC_ITC_3148_8kHz.eps "ITC ITC-3148 @ 8 kHz" width=0.8\textwidth
 *
 * \subsection ITC-3167 ITC-3167 @ 11 kHz
 *
 * \subsubsection ITC-3167-DT Datasheet:
 *
 * <a href="http://http://www.itc-transducers.com/pdf/3167.pdf">Datasheet</a> 
 *
 * \subsubsection ITC-3167-SPL SPL:
 *
 * \image html bezier_ITC_3167.png "ITC ITC-3167 SPL" \n
 * \image latex bezier_ITC_3167.eps "ITC ITC-3167 SPL" width=0.8\textwidth
 *
 * \subsubsection ITC-3167-BP Vertical beam pattern:
 *
 * \image html ITC_ITC_3167_10kHz.png "ITC ITC-3167 @ 10 kHz" \n
 * \image latex ITC_ITC_3167_10kHz.eps "ITC ITC-3167 @ 10 kHz" width=0.8\textwidth
 *
 *
 * \section ITT ITT
 * 
 * \subsection ITT-SB31CT SB31CT @ 10 kHz
 *
 * \subsubsection ITT-SB31CT-DT Datasheet:
 *
 * <a href="http://uss.es.itt.com/as/docs/Acoustic%20Tranducer%20Model%20SB31CT%20-%20Deep%20Submergence%20General%20Purpose%20Transducer.pdf">Datasheet</a> 
 *
 * \subsubsection ITT-SB31CT-SPL SPL:
 *
 * \image html bezier_ITT_SB31CT.png "ITT SB31CT SPL" \n
 * \image latex bezier_ITT_SB31CT.eps "ITT SB31CT SPL" width=0.8\textwidth
 *
 * \subsubsection ITT-SB31CT-BP Vertical beam pattern:
 *
 * \image html ITT_SB31CT_10kHz.png "ITT SB31CT @ 10 kHz" \n
 * \image latex ITT_SB31CT_10kHz.eps "ITT BSB31CT @ 10 kHz" width=0.8\textwidth
 *
 *
 * \section Neptune Neptune Sonar Limited
 * 
 * <b>NOTE: vertical beam patterns inferred from datasheets generic description. 
 *          All Neptune transducers report only one value of conductance, SPL calculations could be inaccurate</b>
 *
 *
 * \subsection T54 T54 @ 13 kHz
 *
 * \subsubsection T54-DT Datasheet:
 *
 * <a href="http://www.neptune-sonar.co.uk/t54.asp">Datasheet</a> 
 *
 * \subsubsection T54-SPL SPL:
 *
 * \image html bezier_Neptune_T54.png "Neptune T54 SPL" \n
 * \image latex bezier_Neptune_T54.eps "Neptune T54 SPL" width=0.8\textwidth
 *
 * \subsubsection T54-BP Vertical beam pattern:
 *
 * \image html Neptune_T54_13kHz.png "Neptune T54 @ 13 kHz" \n
 * \image latex Neptune_T54_13kHz.eps "Neptune T54 @ 13 kHz" width=0.8\textwidth
 *
 *
 * \subsection T186 T186 @ 17 kHz
 *
 * \subsubsection T186-DT Datasheet:
 *
 * <a href="http://www.neptune-sonar.co.uk/t816.asp">Datasheet</a> 
 *
 * \subsubsection T186-SPL SPL:
 *
 * \image html bezier_Neptune_T186.png "Neptune T186 SPL" \n
 * \image latex bezier_Neptune_T186.eps "Neptune T186 SPL" width=0.8\textwidth
 *
 * \subsubsection T186-BP Vertical beam pattern:
 *
 * \image html Neptune_T186_17kHz.png "Neptune T186 @ 17 kHz" \n
 * \image latex Neptune_T186_17kHz.eps "Neptune T186 @ 17 kHz" width=0.8\textwidth
 *
 * \subsection T204 T204 @ 54 kHz
 *
 * \subsubsection T204-DT Datasheet:
 *
 * <a href="http://www.neptune-sonar.co.uk/t204.asp">Datasheet</a> 
 *
 * \subsubsection T204-SPL SPL:
 *
 * \image html bezier_Neptune_T204.png "Neptune T204 SPL" \n
 * \image latex bezier_Neptune_T204.eps "Neptune T204 SPL" width=0.8\textwidth
 *
 * \subsubsection T204-BP Vertical beam pattern:
 *
 * \image html Neptune_T204_54kHz.png "Neptune T204 @ 54 kHz" \n
 * \image latex Neptune_T204_54kHz.eps "Neptune T204 @ 54 kHz" width=0.8\textwidth
 *
 * \subsection T216 T216 @ 58 kHz
 *
 * \subsubsection T216-DT Datasheet:
 *
 * <a href="http://www.neptune-sonar.co.uk/t216.asp">Datasheet</a> 
 *
 * \subsubsection T216-SPL SPL:
 *
 * \image html bezier_Neptune_T216.png "Neptune T216 SPL" \n
 * \image latex bezier_Neptune_T216.eps "Neptune T216 SPL" width=0.8\textwidth
 *
 * \subsubsection T216-BP Vertical beam pattern:
 *
 * \image html Neptune_T216_58kHz.png "Neptune T216 @ 58 kHz" \n
 * \image latex Neptune_T216_58kHz.eps "Neptune T216 @ 58 kHz" width=0.8\textwidth
 *
 * \subsection T217 T217 @ 25 kHz
 *
 * \subsubsection T217-DT Datasheet:
 *
 * <a href="http://www.neptune-sonar.co.uk/t217.asp">Datasheet</a> 
 *
 * \subsubsection T217-SPL SPL:
 *
 * \image html bezier_Neptune_T217.png "Neptune T217 SPL" \n
 * \image latex bezier_Neptune_T217.eps "Neptune T217 SPL" width=0.8\textwidth
 *
 * \subsubsection T217-BP Vertical beam pattern:
 *
 * \image html Neptune_T217_25kHz.png "Neptune T217 @ 25 kHz" \n
 * \image latex Neptune_T217_25kHz.eps "Neptune T217 @ 25 kHz" width=0.8\textwidth
 *
 * \subsection T218 T218 @ 22 kHz
 *
 * \subsubsection T218-DT Datasheet:
 *
 * <a href="http://www.neptune-sonar.co.uk/t218.asp">Datasheet</a> 
 *
 * \subsubsection T218-SPL SPL:
 *
 * \image html bezier_Neptune_T218.png "Neptune T218 SPL" \n
 * \image latex bezier_Neptune_T218.eps "Neptune T218 SPL" width=0.8\textwidth
 *
 * \subsubsection T217-BP Vertical beam pattern:
 *
 * \image html Neptune_T218_22kHz.png "Neptune T218 @ 22 kHz" \n
 * \image latex Neptune_T218_22kHz.eps "Neptune T218 @ 22 kHz" width=0.8\textwidth
 *
 *
 * \section RESON RESON
 * 
 * \subsection TC1026 TC1026 @ 36 kHz
 *
 * \subsubsection TC1026-DT Datasheet:
 *
 * <a href="http://www.reson.com/%5Cgraphics%5Cdesign%5CSpec%20sheets%5CTransducers/TC1026.pdf">Datasheet</a> 
 *
 * \subsubsection TC1026-SPL SPL:
 *
 * \image html bezier_RESON_TC1026.png "RESON TC1026 SPL" \n
 * \image latex bezier_RESON_TC1026.eps "RESON TC1026 SPL" width=0.8\textwidth
 *
 * \subsubsection TC1026-BP Vertical beam pattern:
 *
 * \image html RESON_TC1026_36kHz.png "RESON TC1026 @ 36 kHz" \n
 * \image latex RESON_TC1026_36kHz.eps "RESON TC1026 @ 36 kHz" width=0.8\textwidth
**/

/**
 * \page wossphy New NS-Miracle classes
 *
 * WOSS introduces a new Packet header struct hdr_woss, WossChannelModule, WossMPropagation and WossMInterferenceMIV classes 
 * for channel computations and interference calculations.<p>
 *
 * It also sports a ChannelEstimator, ChEstimatorPlugIn, ClMsgChannelEstimation for
 * channel estimation purposes. <p>
 *
 * It adds support for positioning with WossPosition and for waypoint mobility with WossWpPosition.<p>
 *
 * Finally it provides the WossMPhyBpsk class for BPSK modulation with power control based on channel estimations.
 *
 **/

/**
* \page altimetry Altimetry models
*
* WOSS allows the user to create and simulate sea wave models. The altimetry framework supports time evolution.
* 
* \section flat_alt Flat Model
* 
* The basic model is the Flat Altimetry model: it represents a flat sea surface. 
*
* \section bret_alt Bretschneider Model
*
* The Bretschneider Altimetry class implements the Bretschneider (ITTC two parameters) wave spectrum <i>[1]</i>.
*
* Its input parameters are:
* <ul>
*     <li> <i>characteristic wave height [m] - <b>H</b> -</i>
*     <li> <i>wave period [s] - <b>T</b> -</i>
* </ul>
* Additional parameters are:
* <ul>
*     <li> <i>range [m]</i>
*     <li> <i>range steps</i>
*     <li> <i>scenario depth [m]</i>
* </ul>
* The latter are automatically set by the WOSS framework.
*
* \subsection bret_imgs Examples:
*
* \image html altimetry_bret_T1.png "Example of a Bretschneider spectrum with T=1 and H=1" \n
* \image latex altimetry_bret_T1.eps "Example of a Bretschneider spectrum with T=1 and H=1"
*
* \subsection alt_ref References:
*
* <ol>
*     <li> G. J. Komen et al.,  <i>Dynamics and modeling of ocean waves.</i> Cambridge University Press, 1994.
* </ol>
*/

/**
* \page time_evo Time evolution modeling
*
* Time evolution is supported by the following object/classes:
* <ul>
*     <li> woss::Woss - controls its evolution by querying a new SSP for the new time evolution 
*          quantum and by asking its woss::Altimetry to evolve.
*     <li> woss::Altimetry - performs an evolution of its mathematical model.
*     <li> woss::AltimBretschneider - generates a new realization of its statistical process.
* </ul>
*
* Each class supports an independent time evolution quantum, measured in seconds, and the enabling/disabling of the feature,
* for the maximum flexibility.
*
* The framework controls the time evolution through the following classes:
* <ul>
*     <li> woss::WossManager - the class now supports queries for a specific woss::Time object or for a specific 
*          number of seconds after the start of the simulation (woss::SimTime).
*     <li> woss::WossController - for each pair of tx-rx woss::Location the user can set a different woss::SimTime 
*          object. 
*     <li> woss::WossDbManager, woss::WossDb - all databases now supports queries for a specific woss::Time object
*     <li> woss::CustomDataTimeContainer - A new template for custom db data has been introduced to properly support time evolution.
*          This is best used for time dependent custom SSP data, as each returned value is an linear interpolation of 
*          the SSP related to the two most close Time values.
* </ul>
*
* @see For a clarifying example please check out the related tcl file in <b>./samples/</b> directory.
*
*/

/**
 * \page installation Installation
 *
 * \section WOSS-note PLEASE NOTE:
 *
 * \note <b>No super-user credentials are needed for any of these installations</b>. <br> <br>
 * WOSS now supports the installation as a stand alone library (e.g. with no NS2 and NS-Miracle support).
 * This installation method is useful if you require the library to work in any project that doesn't need 
 * NS2/NS-Miracle libraries and related source code.
 *
 * \section  WOSS-comp Compatibilities
 *
 * The current WOSS version has the following compatibilities:
 * <ul>
 *    <li> <b>Acoustic Toolbox</b>: May 2023
 *    <li> <b>HDF5 library</b>: v1.14.2
 *    <li> <b>NetCDF C library</b>: v4.9.2
 *    <li> <b>NetCDF4 C++ library</b>: v4.3.1
 *    <li> <b>GEBCO databases</b>: 1D and 2D, 2008, 2014, 2019, 2020, 2022, 2023
 * </ul>

 * \section  WOSS-req Requirements
 *
 * <ul>
 *    <li> Download the <b>recommended</b> <a href="https://woss.dei.unipd.it/#libraries">Acoustic Toolbox Library</a>
 *         and follow installation instructions. The directory path that contains
 *         the binaries should be in the $PATH environment.
 *    <li> woss::BellhopArrSyntax::BELLHOP_CREATOR_ARR_FILE_SYNTAX_1 is compliant with Bellhop arr file 
 *         syntax of the acoustic toolbox library up until the 16 Aug 2016 version.
 *    <li> woss::BellhopArrSyntax::BELLHOP_CREATOR_ARR_FILE_SYNTAX_2 is compliant with Bellhop arr file 
 *         syntax of the acoustic toolbox library >= 31 March 2019 version. 
 *         This is the new factory value. 
 *         @see woss::BellhopCreator::setBellhopArrSyntax or tcl binded value bellhop_arr_syntax.
 *    <li> <b>In order to use the latest GEBCO 15 seconds of arc databases, NetCDF4 + HDF5 support had to be added to the framework.</b>
 *         If you wish to use NetCDF classes and databases, download the recommended <a href="https://woss.dei.unipd.it/#libraries">HDF5 library</a>
 *         <a href="https://woss.dei.unipd.it/#libraries">NetCDF C library</a>
 *         and <a href="https://woss.dei.unipd.it/#libraries">NetCDF C++ library</a> ; \n
 *         All libraries have to be built <b>with support for dynamic libraries</b> and with <b>NetCDF4 support</b>. \n
 *         Please refer to NetCDF documentation for comprehensive set of installation instructions of the C and C++ libraries.
 *         Please note that the `--prefix=<optional_netcdf4_install_path>` option is strongly suggested, and should be the same for HDF5, NetCDF-C and NetCDF-C++4. \n
 *         <i>The previous NetCDF legacy installation instructions are still supported by are obsolete and not recommended</i>. \n
 *         A simple installation script is given here as example:
 *         <ul>
 *         <li> install the recommended HDF5 library with these exact steps:
 *            <ul>
 *              <li>`./configure --enable-shared --prefix=<optional_netcdf4_install_path>`
 *              <li>`make`
 *              <li>`make check`
 *              <li>should any test fail, based on the test severity you could still try to continue with the installation by issuing `make install`
 *            </ul>
 *         <li> install the recommended NETCDF4 C library by passing the common installation path in both CPPFLAGS and LDFLAGS: 
 *            <ul>
 *               <li> `./configure --prefix=<optional_netcdf4_install_path> --enable-netcdf-4 --enable-shared `
 *                    `--disable-dap --disable-byterange CPPFLAGS="$CPPFLAGS -I<optional_netcdf4_install_path>/include" `
 *                    `LDFLAGS="$LDFLAGS -L<optional_netcdf4_install_path>/lib" `
 *               <li> `make`
 *               <li> `make check`
 *              <li>should any test fail, based on the test severity you could still try to continue with the installation by issuing `make install`
 *            </ul>
 *         <li> install the recommended NETCDF4 C++ library by passing the common installation path in both CPPFLAGS and LDFLAGS:
 *           <ul>
 *              <li>`./configure --prefix=<optional_netcdf4_install_path> `
 *                  `--enable-shared CPPFLAGS="$CPPFLAGS -I<optional_netcdf4_install_path>/include" `
 *                  `LDFLAGS="$LDFLAGS -L<optional_netcdf4_install_path>/lib" `
 *              <li>`make`
 *              <li>`make check`
 *              <li>`make install`
 *          </ul>
 *         </ul>
 *    <li> If you wish to add NS-Miracle support, download the <b>latest</b> version of NS-Miracle from the <a href="https://github.com/signetlabdei/nsmiracle">official git repository</a>: \n
 *         Read documentation provided in the above link for installation instructions.
 *    <li> If you wish to use WOSS with world environmental data, download and extract the latest WOSS databases. 
 *         Download the <a href="https://www.bodc.ac.uk/data/open_download/gebco/gebco_2023/zip/">GEBCO 2023 2D Fifteen seconds zip archive</a> 
 *         or any of the <a href="https://www.gebco.net/data_and_products/historical_data_sets">previous data sets</a> 
 *         and put them in the same directory.
 * </ul>
 *
 * \section extensions How to install WOSS library
 *
 * <ol>
 *    <li> extract the compressed file in a directory of your choice and cd into that directory;
 *    <li> run `./autogen.sh` 
 *    <li> run `./configure` with the following options:
 *         <ul>
 *             <li> `--with-ns-allinone=<ns2-allinone_path>` <i> <b>optional</b>, needed if you want to compile the library for NS2 and NSMIRACLE.</i> @see \ref ex_inst to avoid gcc-13 error compilation.
 *             <li> `--with-nsmiracle=<ns-miracle_path>` <i> <b>optional</b>, needed if you want to compile the library for NS2 and NSMIRACLE.</i> @see \ref ex_inst to avoid gcc-13 error compilation.
 *             <li> `--with-netcdf4=<NetCDF4_install_path>` <i> <b>optional</b>, needed if you want to use NetCDF4 + HDF5 databases.
 *                                                                           (The path is the same mentioned in the Requirements section, if NetCDF4
 *                                                                         was installed with no --prefix, the default path SHOULD be
 *                                                                         /usr/local) </i>
 *             <li> `--with-pthread` <i>optional</i> but <b>recommended</b>
 *             <li> `--prefix=<path_where_libraries_will_be_installed>` 
 *                  \n this path is optional and should be the same one used with NS-Miracle installation.
 *                  If used, this path should be added to the environmental variable <i>LD_LIBRARY_PATH</i>. 
 *                  Please refer to NS-Miracle documentation for more info
 *         </ul>
 *    <li> run `make`
 *    <li> run `make check` to optionally perform any framework test
 *    <li> should any test fail, please enable its debug, rerun the test, collect the debug output file written `woss/tests/` directory and send a mail to WOSS@guerra-tlc.com
 *    <li> run `make install`
 * </ol>
 *
 * \section ex_inst Examples
 *
 * The following line would install WOSS with pthread, and NetCDF4, but with no NS2/NS-Miracle support (stand-alone library).
 * 
 * `./configure --with-netcdf4=<NetCDF4_install_path> --with-pthread --prefix=<path_where_libraries_will_be_installed>`
 *
 * The next line would install WOSS with NetCDF4, NS2 and NS-Miracle support and it removes the gcc-13 overloaded-virtual warning
 *
 * `CXXFLAGS="$CXXFLAGS -Wno-overloaded-virtual" ./configure --with-netcdf4=<NetCDF4_install_path> --with-ns-allinone=<ns2-allinone_path> 
 * --with-nsmiracle=<ns-miracle_path> --with-pthread --prefix=<path_where_libraries_will_be_installed>`
**/
 

/**
* \page Changelog Changelog
* 
* WOSS changelog:
*
* <b>PLEASE NOTE</b>: WOSS is in its development stage, API changes will be limited at minimum, 
*                     but this cannot be guaranteed. 
*
* <ul>
*   <li> <b>v1.0.0</b> <ul> <li> release version 
*                      </ul>
*   <li> <b>v1.0.1</b> <ul> <li> woss::Coord, woss::CoordZ : latitude, longitude and depth are now double value 
*                                (instead of woss::PDouble)
*                           <li> woss::ResPressureTxtDb, woss::ResTimeArrTxtDb : added a space_sampling feature
*                           <li> woss::WossDbManager : the managing of custom enviromental data has been reworked, 
*                                check doxygen documentation and \ref basic_samples
*                           <li> WossCbrModule class added
*                       </ul>
*   <li> <b>v.1.1.0</b> <ul> <li> \ref ssp_db : data from WOA2009 has been released; 
*                                 these files are fully compatible with the 2005 version code
*                            <li> woss::CustomDataContainer : bugs fixed
*                            <li> woss::Location: class for positioning added
*                            <li> WossPosition: new class added. WOSS now expect a WossPosition as Miracle Position class 
*                                 @see \ref basic_samples for usage.
*                            <li> WossWpPosition : class has been reworked
*                            <li> woss::WossCreatorContainer : class has been added
*                            <li> woss::WossCreator, woss::BellhopCreator : interfaces expanded, they now handles custom values 
*                                 for woss::Location objects
*                            <li> woss::ACToolboxWoss : bugs fixed
*                            <li> woss::BellhopWoss : bugs fixed
*                            <li> woss::TimeReference, woss::TimeReferenceTcl : classes for providing WOSS a time reference
*                            <li> woss::RandomGenerator, woss::RandomGeneratorTcl : classes for providing WOSS a random numbers generators
*                            <li> WossRandomGenerator, WossRandomGeneratorTcl : hooks for NS2 random generators
*                            <li> woss::DefHandler : now can set and return a time reference and a random generator objects
*                                 @see \ref basic_samples for usage.
*                            <li> woss::SSP : class has been updated to work with woss::RandomGenerator
*                       </ul>
*   <li> <b>v.1.2.0</b> <ul> <li> woss::RandomGenerator : bug fixed
*                            <li> woss::WossManagerResDbMT : some bugs fixed in thread allocation
*                            <li> woss::ACToolboxWoss : bug fixed
*                            <li> woss::ResTimeArrBinDb, woss::ResTimeArrBinDbCreator, woss::ResPressureBinDb, woss::ResPressureBinDbCreator :
*                                 classes for storing computed results in a binary file
*                            <li> ChannelEstimator, ChannelEstimatorPlugin : now works with MAC address instead of IP address 
*                                 to permit power control at MAC level. This now requires that only the MLL ARP table has 
*                                 to be filled instead of routing tables and ARP tables. Space sampling capability added
*                            <li> woss::Transducer : transducer definitions added
*                            <li> woss::TransducerHandler : transducer handler definitions added
*                            <li> woss::BellhopWoss : addded beam pattern capabilities
*                            <li> woss::BellhopCreator : added custom beam pattern capabilities
*                            <li> woss::Location : default comparison_distance value changed, added support for dinamic vertical
*                                 beam pattern orientation
*                            <li> WossPosition, WossWpPosition : added support for dynamic vertical beam pattern orientation
*                            <li> UnderwaterMPhyBpsk : some tcl variables <b>RENAMED</b> 
*                                 @see UnderwaterMPhyBpsk, tcl samples
*                            <li> UwMPhyBpskTransducer, WossMPhyBpsk : added support for woss::Transducer, to properly 
*                                 simulate SPL and energy consumption
*                            <li> added beam pattern description of BTech, ITC, ITT, RESON transducers @see \ref beam_pattern_page
*                            <li> test_aloha_no_dbs.tcl, test_aloha_with_dbs.tcl : now channel estimation process properly works
*                            <li> new tcl sample added @see samples subdirectory
*                            <li> doxygen basic samples page removed, all the comments are inline within the tcl files
*                            <li> <b>NOTE</b>: from version 1.2.0, the standard configuration of MIRACLE's MIV interface retrieves 
*                                 multiple arrivals from WOSS and computes interference using a Gaussian model or, 
*                                 equivalently, by summing all taps related to the interferers the same way as in 
*                                 Bellhop's "incoherent mode".
*                                 In addition, if the interference level varies throughout the duration of a packet, 
*                                 the typically different error rates that result are separately accounted for in 
*                                 the computation of the overall packet error rate. This is the default version now. 
*                                 <br><i>This change has been applied as part of the work for the CLAM project, 
*                                 funded by the European Commission, G.A. 258359</i>.\n
*                                 Credits to <b>Roberto Petroccia</b>, University of Rome, for helping with the implementation.
*                       </ul>  
*   <li> <b>v.1.3.0</b> <ul> <li> WossChannelModule : <i>channel_eq_time_</i>, <i>channel_eq_snr_threshold_db_</i> and <i>channel_symbol_time_</i> introduced, 
*                                 <i>channel_time_resolution_</i> removed
*												     <ul> 
*													      <li> the channel now coherently sums all taps at <i>channel_symbol_resolution_</i> 
*                               <li> the attenuation threshold in db is calculated from <i>channel_eq_snr_threshold_db_</i>
*                               <li> the first tap that has txloss <u>less or equal than the</u> attenuation threshold is found.
*                                    If the threshold is less than 0 then the threshold is set to 0, and the first tap is taken.
*                               <li> then all taps after the above tap + <i>channel_equalization_time_</i> are incoherently summed
*                                    if <i>channel_eq_time_</i> == 0 no eq is done.
*                                    if <i>channel_eq_time_</i> < 0 then all taps are incoherently summed 
*                               <li> all taps after <i>channel_eq_time_</i> are not processed
*                               <li> @see WossChannelModule, tcl samples
*                            </ul>
*                            <li> Altimetry modeling has been introduced:
*                            <ul>
*                               <li>woss::Altimetry is the standard flat altimetry
*                               <li>woss::AltimBretschneider is the Bretschneider wave model.
*                               <li> @see \ref altimetry, woss::Altimetry, woss::AltimBretschneider, tcl samples
*                            </ul>  
*                            <li> time evolution support has been added for the whole framework.
*                         </ul>
*  <li> <b>v.1.3.1</b>  <ul> <li> TCL dependancies have been moved to WossPhy library, leaving main library
*                                 libWoss free of any unwanted dependancy
*                       </ul>
*  <li> <b>v.1.3.2</b>  <ul> <li> Minor bug fixes
                        </ul>
*  <li> <b>v.1.3.3</b>  <ul> <li> Minor bug fixes
*                       </ul>
*  <li> <b>v.1.3.4</b>  <ul> <li> Minor bug fixes
*                       </ul>
*  <li> <b>v.1.3.5</b>  <ul> <li> UwmStd library has been moved into NS-Miracle for a better 
*                                 compatibility with DESERT framework
*                            <li> Minor bug fixes
*                       </ul>
*  <li> <b>v.1.3.6</b>  <ul> <li> compilation warnings removal
*                            <li> Minor bug fixes
*                       </ul>
*  <li> <b>v.1.3.7</b>  <ul>
*                            <li> warnings system revised. 
*                            <li> tcl warnings removed
*                            <li> bug fixes (thanks to Raúl Sáez Cañete)
*                       </ul>
*  <li> <b>v.1.3.8</b>  <ul>
*                            <li> minor bug fixes
*                            <li> license changed to GPLv2
*                       </ul>
*  <li> <b>v.1.3.9</b>  <ul>
*                            <li> minor bug fixes
*                            <li> syntax now compliant with C++11 standard
*                       </ul>
*  <li> <b>v.1.4.0</b>  <ul>
*                            <li> minor bug fixes
*                       </ul>
*  <li> <b>v.1.5.0</b>   <ul>
*                            <li> memory leak fixed (thanks to Raúl Sáez Cañete)
*                            <li> new bathymetry write mode introduced (thanks to Randall Plate)
*                            <li> new attenuation complex tap calculation introduced: 
*                            <ul>
*                                 <li> travel time phase is now properly used
*                                 <li> a bellhop arr file syntax option has been introduced, in order 
*                                      to make WOSS work with both
*                                      acoustic tool box >= 16 Aug 2016 and previous versions.
*                                 <li> BE ADVISED THAT factory value is using the latest syntax 
*                                      (i.e. acoustic toolbox >= 16 Aug 2016)
*                           </ul>
*                       </ul>
*  <li> <b>v.1.5.1</b>  <ul>
*                            <li> gcc-6 warning removal
*                       </ul>
*  <li> <b>v.1.6.0</b>  <ul>
*                            <li> bug fix in volumetrical attenuation computations
*                            <li> new APIs introduced
*                       </ul>
*  <li> <b>v.1.6.1</b> <ul>
*                            <li> LICENSE revised
*                      </ul>
*  <li> <b>v.1.6.2</b> <ul>
*                            <li> bug fix in box_depth and box_range for ns2 tcl hooks
*                      </ul>
*  <li> <b>v.1.7.0</b> <ul>
*                            <li> bug fixing in WossManager
*                            <li> new feature in WossChannelModule
*                      </ul>
*  <li> <b>v.1.8.0</b> <ul>
*                            <li> new UTM CSV Database model added
*                            <li> minor fixes in WossChannelModule
*                      </ul>
*  <li> <b>v.1.9.0</b> <ul>
*                            <li>Added support for NetCDF4 and HDF5, which is required in order to open_
*                                the latest GEBCO 2019 database.
*                            <li>A new bellhop arr file syntax option has been introduced,
*                                in order to be aligned with Acoustic Toolbox >= 31 March 2019.
*                            <li>BE ADVISED THAT factory value is using the latest syntax 
*                                (i.e. acoustic toolbox >= 31 March 2019)
*                            <li>Credits to <b>Randall Plate</b> for helping with the implementation.
*                            <li>WossDb GEBCO has been refactored in order to support 2D netcdf format.
*                            <li>Bug fixes and improvements in woss::ACToolboxWoss and woss::BellhopWoss
*                      </ul>
*  <li> <b>v.1.10.0</b> <ul>
*                            <li> Added support for SSP NetCDF4 databases generated from WOA2013 dataset.
*                            <li> Fix for Bellhop quad SSP scenario.
*                      </ul>
*  <li> <b>v.1.11.0</b> <ul>
*                            <li> Added support for SSP NetCDF4 databases generated from WOA2018 and WOA2001 dataset.
*                            <li> Fix for woss::BellhopWoss ray angles env file write operation.
*                            <li> Added support for Bellhop latest shade file reader syntax.
*                      </ul>
*  <li> <b>v.1.12.0</b> <ul>
*                            <li> Added support for DECK41V2 databases in NetCDF4 format with revised data format.
*                            <li> Added support for GEBCO 2020 database.
*                            <li> Added support for autotools tests, installation procedure has been updated.
*                            <li> Fix for woss::BellhopWoss SSP max depth.
*                      </ul>
*  <li> <b>v.1.12.1</b> <ul>
*                            <li> Fixed issue with autotools distribution.
*                            <li> Added SSP truncate option to both woss::SSP and woss::BellhopWoss (thanks to Randall Plate).
*                            <li> Improved woss::CoordZ::getCoordZFromCartesianCoords() function (thanks to Randall Plate).
*                      </ul>
*  <li> <b>v.1.12.2</b> <ul>
*                            <li> Fixed issue with SSP::truncate c+11 syntax
*                      </ul>
*  <li> <b>v.1.12.3</b> <ul>
*                            <li> New geographical to cartesian conversion model, based on spherical, GRS80 and WGS84 models
*                      </ul>
*  <li> <b>v.1.12.4</b> <ul>
*                            <li> Added support for GEBCO 2022
*                            <li> Fixed TCL samples
*                            <li> Refactor of function member's static variables in order to guarantee re-entrancy
*                            <li> Fixed bug with WossDbManager
*                            <li> Added TCL debug capabilities to Altimetry classes
*                            <li> Refactored usage of streams' precision throughout the whole framework
*                      </ul>
*  <li> <b>v.1.12.5</b> <ul>
*                            <li> minor fixes to ns-Miracle classes
*                      </ul>
*  <li> <b>v.1.12.6</b> <ul>
*                            <li> fixed gcc-13 warnings
*                            <li> TCL examples updated to GEBCO 2023
*                            <li> removed warning in woss::BellhopWoss
*                            <li> changed URL of main WOSS website
*                      </ul>
*  <li> <b>v.1.13.0</b> <ul>
*                            <li> Added support for SSP NetCDF4 databases generated from WOA2023 dataset
*                            <li> added bellhop autotools test unit
*                            <li> improved the WossTest framework
*                            <li> woss::ResReader fixed importing of bellhop's SPL and arrivals from binary mode
*                            <li> woss::WossDbManager - added support for importing bathymetry, SSP and sediment from a string
*                            <li> woss::WossManager - added API to erase all WOSS instances
*                      </ul>
* </ul>
**/


/**
* \page Acknowledgement Acknowledgements
*
* <i>This software has been developed by Federico Guerra
* and SIGNET lab, University of Padova, 
* in collaboration with the NATO Centre for Maritime Research 
* and Experimentation (http://www.cmre.nato.int ; 
* E-mail: pao@cmre.nato.int), 
* whose support is gratefully acknowledged</i>.
*
**/


/**
* \page Copyright Copyright Terms
* 
* WOSS - World Ocean Simulation System -
* 
* Copyright (C) 2009 Federico Guerra 
* and regents of SIGNET lab, University of Padova.
* 
* Author: Federico Guerra - federico@guerra-tlc.com
* 
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation;
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
* 
* -------------------------------------------------------------------------- \n
* --------------------------------------------------------------------------
* 
* The source files containing NS-Miracle code refer to this revised BSD 
* and GPL compatible copyright:
* 
*  
* Copyright (c) 2006 Regents of the SIGNET lab, University of Padova.
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:<OL>
* <LI> Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.</LI>
* <LI> Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.</LI>
* <LI> Neither the name of the University of Padova (SIGNET lab) nor the 
*    names of its contributors may be used to endorse or promote products 
*    derived from this software without specific prior written permission.</LI>
* </OL>
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED 
* TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
* PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
* OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
* OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
* ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*  
* ---------------------------------------------------------------------------- \n
* ----------------------------------------------------------------------------
* 
* The source files containing NetCDF code refer to this BSD-like and
* GPL compatible copyright:
* 
* Copyright 1993-2008 University Corporation for Atmospheric Research/Unidata
* 
* Portions of this software were developed by the Unidata Program at the 
* University Corporation for Atmospheric Research.
* 
* Access and use of this software shall impose the following obligations
* and understandings on the user. The user is granted the right, without
* any fee or cost, to use, copy, modify, alter, enhance and distribute
* this software, and any derivative works thereof, and its supporting
* documentation for any purpose whatsoever, provided that this entire
* notice appears in all copies of the software, derivative works and
* supporting documentation.  Further, UCAR requests that the user credit
* UCAR/Unidata in any publications that result from the use of this
* software or in any product that includes this software, although this
* is not an obligation. The names UCAR and/or Unidata, however, may not
* be used in any advertising or publicity to endorse or promote any
* products or commercial entity unless specific written permission is
* obtained from UCAR/Unidata. The user also understands that
* UCAR/Unidata is not obligated to provide the user with any support,
* consulting, training or assistance of any kind with regard to the use,
* operation and performance of this software nor to provide the user
* with any updates, revisions, new versions or "bug fixes."

* THIS SOFTWARE IS PROVIDED BY UCAR/UNIDATA "AS IS" AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL UCAR/UNIDATA BE LIABLE FOR ANY SPECIAL,
* INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
* FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
* NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
* WITH THE ACCESS, USE OR PERFORMANCE OF THIS SOFTWARE.
*
* ---------------------------------------------------------------------------- \n
* ----------------------------------------------------------------------------
* 
* Bellhop program is published under the following copyright:
* 
* 
* Copyright (C) 2009  Michael B. Porter
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
*
* ---------------------------------------------------------------------------- \n
* ----------------------------------------------------------------------------
* 
* TEOS-10 SSP formula code has been taken from has been taken from 
* Gibbs SeaWater (GSW) Oceanographic Toolbox, which has published under the folllowing copyright:
*
*
* Copyright (c) 2011, SCOR/IAPSO WG127 (Scientific Committee on Oceanic Research/
* International Association for the Physical Sciences of the Oceans, Working Group 127).
*
* All rights reserved.
*
* Redistribution and use, in source and binary forms, without modification, is permitted
* provided that the following conditions are met:
*
* • Redistributions of source code must retain the above copyright notice, this list
*   of conditions and the following disclaimer.
* 
* • Redistributions in binary form must reproduce the above copyright notice, this
*   list of conditions and the following disclaimer in the documentation and/or other
*   materials provided with the distribution.
*
* • Neither the name of SCOR/IAPSO WG127 nor the names of its contributors may be used
*   to endorse or promote products derived from this software without specific prior
*   written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
* SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
* TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
* ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
* DAMAGE.
*
* The software is available from http://www.TEOS-10.org
*
**/


/**
* \page License License Terms
GNU GENERAL PUBLIC LICENSE

Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc.  
51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
Preamble

The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.

When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.

We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.

Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and modification follow.

TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The "Program", below, refers to any such program or work, and a "work based on the Program" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term "modification".) Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.

You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.
b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.
c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)
These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.

In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.

3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,
b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,
c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)
The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.

If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.

5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.

7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.

It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.

This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.

Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.

10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.

NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs

If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the "copyright" line and a pointer to where the full notice is found.

one line to give the program's name and an idea of what it does.
Copyright (C) yyyy  name of author

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this when it starts in an interactive mode:

Gnomovision version 69, Copyright (C) year name of author
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
type `show w'.  This is free software, and you are welcome
to redistribute it under certain conditions; type `show c' 
for details.
The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your school, if any, to sign a "copyright disclaimer" for the program, if necessary. Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright
interest in the program `Gnomovision'
(which makes passes at compilers) written 
by James Hacker.

signature of Ty Coon, 1 April 1989
Ty Coon, President of Vice
This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License.
 **/
